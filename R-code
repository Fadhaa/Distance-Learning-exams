library(gtools)
options(scipen=99)




charfun<-function(xxx){
if (Re(xxx)!=0 && Im(xxx)!=0){
if (Im(xxx)!=1 && Im(xxx)!=-1){a9<-as.character(xxx)
}else if (Im(xxx)==1){a9<-paste(c(as.character(Re(xxx)),"+i"),collapse="")
}else if (Im(xxx)==-1){a9<-paste(c(as.character(Re(xxx)),"-i"),collapse="")}
}else if (Re(xxx)==0 && Im(xxx)!=0){
if (Im(xxx)!=1 && Im(xxx)!=-1){a9<-paste(c(as.character(Im(xxx)),"i"),collapse="")
}else if (Im(xxx)==1){a9<-"i"
}else if (Im(xxx)==-1){a9<-"-i"}
}else if (Re(xxx)!=0 && Im(xxx)==0){a9<-as.character(Re(xxx))
}else{a9<-"0"}
return(a9)}


sigfun<-function(xx){
if (xx<0){a9<-as.character(xx)}else{a9<-paste(c("+",as.character(xx)),collapse="")}
return(a9)}

#these codes for generate different matrix questions for number of students
#import student information data

data<-read.table("data.txt",header=FALSE,fill =TRUE)
num<-data.frame(data)
no._students<-dim(num)[1]

##determine the lists of numbers 

r1<-c(seq(-15,-1),seq(1,15))
r2<-c(seq(-9,-1),seq(1,9))
r3<-c(seq(-7,-1),seq(1,7))
r4<-c(seq(-4,-2),seq(2,5))
ix3<-permutations(14,2,r3)
yx<-1:9
messag<-c()
allmsg<-c()
s1<-c()
lis<-c()
sol<-c()
sol1<-c()
ew<-""
ew1<-""
k<-0
ss<-1:dim(ix3)[1]
j<-sample(ss,length(ss))

##generate random numbers for each student and involve these numbers in their questions

for (i in 1:no._students){
ix1<-sample(r1,21)
ix2<-sample(r2,6)
ix4<-sample(r4,2)
x1x2<-sample(yx,2)
x1<-x1x2[1]
x2<-x1x2[2]
m1<-c(ix1[1],ix1[2]+(ix1[3]*1i),(ix1[4]*1i),(ix1[5]*1i),
ix1[6],ix1[7],ix1[8],(ix1[9]*1i),ix1[10])
m2<-c(ix1[11]*1i,ix1[12],ix1[13]+(ix1[14]*1i),ix1[15],
ix1[16]*1i,ix1[17],ix1[18]+(ix1[19]*1i),ix1[20],ix1[21])
k<-ix4[1]*1i
p<-ix4[2]
chark<-charfun(k)
charp<-charfun(p)
A<-matrix(m1,3,3,byrow=TRUE)
B<-matrix(m2,3,3,byrow=TRUE)
D<-k*A-p*B
a1<-ix2[1]
a2<-ix2[2]
k_1<-ix2[3]
k_2<-ix2[4]
k_3<-ix2[5]
k_4<-ix2[6]
setk<-c("k_1","k_2","k_3","k_4")
elm1<-sample(setk,1)
elm2<-c(sample(setdiff(setk,c(elm1)),1),elm1)
elm3<-c(elm2,sample(setdiff(setk,c(elm2)),1))
elm4<-c(elm3[3],setdiff(setk,c(elm3)))
y1<-c()
y1<-rbind(y1,c(elm1,"a2"))
y1<-rbind(y1,elm2)
y1<-rbind(y1,c(paste(elm3[1:2],collapse="+"),paste(elm3[2:3],collapse="+")))
y1<-rbind(y1,c("a1",paste(elm4,collapse="+")))
m3<-c(eval(parse(text=y1[1,1])),eval(parse(text=y1[2,1])),eval(parse(text=y1[3,1])),eval(parse(text=y1[4,1])))
m4<-c(eval(parse(text=y1[1,2])),eval(parse(text=y1[2,2])),eval(parse(text=y1[3,2])),eval(parse(text=y1[4,2])))
C<-matrix(m3,2,2,byrow=TRUE)
E<-matrix(m4,2,2,byrow=TRUE)
F<-C+E
ix5<-sample(r4,7)
a<-ix3[j[i],1]
b<-ix3[j[i],2]
G<-matrix(c(ix5[1]*a,3,-10,(ix5[2]*a)+(ix5[3]*b)),2,2,byrow=TRUE)
charG<-c(paste(c(as.character(ix5[1]),"a"),collapse=""),as.character(3),as.character(-10),
paste(c(as.character(ix5[2]),"a",sigfun(ix5[3]),"b"),collapse=""))
H<-matrix(c((ix5[4]*a)+(ix5[5]*b),1,3,(ix5[6]*a)+(ix5[7]*b)),2,2,byrow=TRUE)
charH<-c(paste(c(as.character(ix5[4]),"a",sigfun(ix5[5]),"b"),collapse=""),as.character(1),as.character(3),
paste(c(as.character(ix5[6]),"a",sigfun(ix5[7]),"b"),collapse=""))
trG<-G[1,1]+G[2,2]
trH<-H[1,1]+H[2,2]
charm1<-sapply(1:length(m1), function(v) charfun(m1[v]))
charm2<-sapply(1:length(m2), function(v) charfun(m2[v]))
vecD<-as.vector(t(D))
charD<-sapply(1:length(vecD), function(v) charfun(vecD[v]))
cha1<-charfun(a1)
cha2<-charfun(a2)
chk1<-charfun(k_1)
chk2<-charfun(k_2)
chk3<-charfun(k_3)
chk4<-charfun(k_4)
charm3<-c(y1[1,1],y1[2,1],y1[3,1],as.character(eval(parse(text=y1[4,1]))))
charm4<-c(as.character(eval(parse(text=y1[1,2]))),y1[2,2],y1[3,2],y1[4,2])
vecF<-as.vector(t(F))
charF<-sapply(1:length(vecF), function(v) charfun(vecF[v]))
Ls<-c(m1[1],m2[4],vecD[2],vecD[3],vecD[5],vecD[6],vecD[7],vecD[8],vecD[9],k_1,k_2,k_3,k_4,a,b)
Ls1<-c(as.character(num[i,1]),as.character(A[1,1]),as.character(B[2,1]),as.character(vecD[2]),as.character(vecD[3])
,as.character(vecD[5]),as.character(vecD[6]),as.character(vecD[7]),as.character(vecD[8])
,as.character(vecD[9]),chk1,chk2,chk3,chk4,as.character(a),as.character(b))
LL<-paste(Ls1,collapse="\t")
ew<-paste(c(ew,LL,"\n"),collapse="")
sol<-rbind(sol,Ls)
Ls2<-c(as.character(num[i,1]),charfun(A[1,1]),charfun(B[2,1]),charD[2],charD[3],
charD[5],charD[6],charD[7],charD[8],charD[9],chk1,chk2,chk3,chk4,as.character(a),as.character(b))
LL1<-paste(Ls2,collapse="\t")
ew1<-paste(c(ew1,LL1,"\n"),collapse="")
msg<-paste(c(
"\\textcolor{red}{",
as.character(num[i,1]),"}",",","\\hspace*{3mm}",
"\\textcolor{blue}{",
"ID","}","\\\\ \n"
,"\\vspace*{3mm}","\n",
"Let 
\\begin{eqnarray}
A=\\left(
\\begin{array}{ccc}
\\nonumber \n","a_{11}","&",charm1[2],"&",charm1[3],"\\\\ \n"
,charm1[4],"&",charm1[5],"&",charm1[6],"\\\\ \n"
,charm1[7],"&",charm1[8],"&",charm1[9],"\\\\ \n"
,"\\end{array}\\right),
B=\\left(
\\begin{array}{ccc}
\\nonumber \n",charm2[1],"&",charm2[2],"&",charm2[3],"\\\\ \n"
,"b_{21}","&",charm2[5],"&",charm2[6],"\\\\ \n"
,charm2[7],"&",charm2[8],"&",charm2[9],"\\\\ \n"
,"\\end{array}\\right),
D=\\left(
\\begin{array}{ccc}
\\nonumber \n",charD[1],"&","d_{12}","&","d_{13}","\\\\ \n"
,charD[4],"&","d_{22}","&","d_{23}","\\\\ \n"
,"d_{31}","&","d_{32}","&","d_{33}","\\\\ \n"
,"\\end{array}\\right),
C=\\left(
\\begin{array}{cc}
\\nonumber \n",charm3[1],"&",charm3[2],"\\\\ \n"
,charm3[3],"&",charm3[4],"\\\\ \n"
,"\\end{array}\\right),\\\\
E=\\left(
\\begin{array}{cc}
\\nonumber \n",charm4[1],"&",charm4[2],"\\\\ \n"
,charm4[3],"&",charm4[4],"\\\\ \n"
,"\\end{array}\\right),
F=\\left(
\\begin{array}{cc}
\\nonumber \n",charF[1],"&",charF[2],"\\\\ \n"
,charF[3],"&",charF[4],"\\\\ \n"
,"\\end{array}\\right),
G=\\left(
\\begin{array}{cc}
\\nonumber \n",charG[1],"&",charG[2],"\\\\ \n"
,charG[3],"&",charG[4],"\\\\ \n"
,"\\end{array}\\right),
H=\\left(
\\begin{array}{cc}
\\nonumber \n",charH[1],"&",charH[2],"\\\\ \n"
,charH[3],"&",charH[4],"\\\\ \n"
,"\\end{array}\\right),
\\end{eqnarray}\\\\
and $k=",chark,"$, $p=",charp,"$, $tr(G)=",as.character(trG),"$, $tr(H)=",as.character(trH),
"$, and $D=kA-pB$, and $C+E=F$\\\\
Find the values of $a_{11}$, $b_{21}$, $d_{12}$, $d_{13}$, $d_{22}$, $d_{23}$, $d_{31}$, $d_{32}$, $d_{33}$, $k_1$, $k_2$, $k_3$, $k_4$, $a$, $b$?\\\\ \n",
"\\textcolor{brown}{",
"==============================================================","}",
"\\\\ \n"),collapse="")
messag<-cbind(messag,msg)
allmsg<-paste(c(allmsg,msg),collapse=" ")
if (floor(i/5)==i/5){allmsg<-paste(c(allmsg,"\\newpage \n"),collapse=" ")}
}

##The output result will be a code for Latex so that we can paste it directely in latex code terminal to generate questions in pdf file

latexmsg<-paste(c(
"\\documentclass[16pt,a4paper]{report}
\\usepackage{amsmath}
\\usepackage{listings}
\\usepackage{verbatim}
\\usepackage{tikz}
\\usepackage[top=2cm, bottom=0.2cm, outer=0.8cm, inner=0.2cm,left=1.5cm]{geometry}
\\usepackage{multirow}
\\usepackage{graphicx}
\\begin{document}
\\begin{flushleft}",
allmsg,"\\",
"\\end{flushleft}
\\end{document}"),collapse=" ")

##The output result(latexmsg) will be a code for Latex so that we can paste it directely in latex code terminal to generate questions in pdf file

SolData<-data.frame(sol)
rownames(SolData)<-as.character(1:dim(SolData)[1])
colnames(SolData)<-c("a11", "b21", "d12", "d13", "d22", "d23", "d31", "d32", "d33", "k1", "k2", "k3", "k4", "a", "b")

###SolData is the solution table for all question





